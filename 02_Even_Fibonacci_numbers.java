/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting
 * with 1 and 2, the first 10 terms will be:
 *     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find
 * the sum of the even-valued terms.
 */

import java.util.Set;
import java.util.HashSet;
import java.lang.Integer;

public class Main {

  public static void main(String[] args) {
    Integer a = 0;
    Integer b = 1;
    Integer c = 0;
    Set<Integer> euler = new HashSet<>();

    do {
      c=a+b;
      a=b;
      b=c;
      if (c%2==0){
        euler.add(c);
      }
    } while (c<4_000_000);

    Integer sum = euler.stream().mapToInt(Integer::intValue).sum();

    System.out.println(sum);  // 4613732

  }
}

